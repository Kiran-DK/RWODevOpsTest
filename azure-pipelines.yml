# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  r: Build
  b: $(Build.BuildNumber)
  c: $(Build.SourceVersion)
  BUILD_NUMBER: $(r).$(b).$(c)
  README: /home/vsts/work/_temp/readme.txt 

pool: 
  vmImage: ubuntu-16.04

steps:
  - bash: sudo apt-get install -y libboost-all-dev

  - bash: sudo g++ -std=c++11 -I/usr/include/boost/asio -I/usr/include/boost -o /home/vsts/work/_temp/binary.out main.cpp connection.cpp connection_manager.cpp mime_types.cpp reply.cpp request_handler.cpp request_parser.cpp server.cpp -lboost_system -lboost_thread -lpthread

  - bash: sudo mv /home/vsts/work/_temp/binary.out /home/vsts/work/_temp/$BUILD_NUMBER.out

  - bash: cd /home/vsts/work/_temp
  
  - bash: |
          if [ ! -f $(README) ];
          then 
          sudo touch $(README) 
          else 
          sudo echo 
          fi

  - bash: sudo echo $(BUILD_NUMBER) | sudo tee -a $(README)

  - bash: sudo cat $(README)

  - task: CopyFiles@1
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: /home/vsts/work/_temp/
      Contents: |
       *.out
       readme.txt
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - bash: sudo cp /home/vsts/work/1/s/Dockerfile '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Files'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      publishLocation: Container 
      TargetPath: 
      artifactName: MyBuildOutputs
      
